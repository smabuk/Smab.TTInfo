@page "/TTLeagues/TeamSummary/{TTInfoId}/{TeamName}"
@page "/TTLeagues/TeamSummary/{TTInfoId}/{TeamName}/{TeamId:int}"
@inject TTLeaguesReader _ttleagues
@attribute [StreamRendering]

<PageTitle>@TeamName - @TTInfoId</PageTitle>

@if (fixtures is null || fixtures.Count == 0) {
	<h1>Loading ... @TeamName ...</h1>
} else {
	<h1>@teamStats?.Competition.Value</h1>
	<h1>@TeamName</h1>
	<div id="fixtures">
		@foreach (Match match in fixtures) {
			FixtureResult? fr;
			MatchCard? matchCard;
			fixtureResults.TryGetValue(match.Id, out fr);
			matchCards.TryGetValue(match.Id, out matchCard);
			<details class="card" data-result='@fr?.Result'>
				<summary class="row">
					<div class="col-12 col-sm-4 col-md-4 col-lg-3">
						@if (match.Date is null) {
							<span class="badge postponed" title="Postponed">P</span>
						}
						<time datetime="@match.ActualDateTime.ToUtcString()">
							@match.ActualDateTime?.ToUKTime().ToString("ddd dd MMM")
							@if (!match.HasResults) {
								<span class="@(MatchHasDefaultStartTime(match) ? null : "start-time-not-default")">@match.ActualDateTime?.ToUKTime().ToString(" HH mm")</span>
							}
						</time>
					</div>
					<div class="col-12 col-sm-8 col-md-8 col-lg-9">
						@if (match.HasResults) {
							<a class="badge badge-sm" href="@CalculateMatchHref(match)" rel="noopener">@fr?.FullScore</a>
						}
						<a href="TTLeagues/TeamSummary/@TTInfoId/@(match.Home.Name.Equals(@TeamName) ? match.Away.Name : match.Home.Name)/@(match.Home.Name.Equals(@TeamName) ? match.Away.TeamId : match.Home.TeamId)">
							<strong>@(match.Home.Name.Equals(@TeamName) ? match.Away.Name : match.Home.Name)</strong>
						</a>
						@if (string.IsNullOrEmpty(match.Venue) is false) {
							<span class="mx-1"> @@ @match.Venue</span>
						}
					</div>
				</summary>
@*
				@if (match.Date is null) {
					<div class="row justify-content-end">
						<div class="col-12 col-md-8 col-lg-9">
							@postponed.Reason
						</div>
					</div>
				}
 *@
				@if (matchCard is not null) {
@*
					@if (completedFixture.Other is not null) {
						<div class="row justify-content-end">
							<div class="col-12 col-md-8 col-lg-9">
								@completedFixture.Other
							</div>
						</div>
					}
*@
					@if (match.Home.TeamId.Equals(TeamId)) {
						<div class="row justify-content-end">
							<div class="col-12 col-md-8 col-lg-9">
								@foreach (PlayerScore player in matchCard.Results.Home.OrderByDescending(p => p.Score)) {
									<span class="@(player.UserId == matchCard.Match.Potm?.Id ? "pom" : "")"><text><a href="TTLeagues/PlayerSummary/@TTInfoId/@player.Name/@player.UserId">@($"{player.Name}")</a> @($" {player.Score} ")</text></span>
								}
							</div>
						</div>
						<div class="row justify-content-end">
							<div class="col-12 col-md-8 col-lg-9">
								@foreach (PlayerScore player in matchCard.Results.Away.OrderByDescending(p => p.Score)) {
									<span class="@(player.UserId == matchCard.Match.Potm?.Id ? "pom" : "")"><a href="TTLeagues/PlayerSummary/@TTInfoId/@player.Name/@player.UserId">@($"{player.Name}")</a> @($" {player.Score} ")</span>
								}
							</div>
						</div>
					} else {
						<div class="row justify-content-end">
							<div class="col-12 col-md-8 col-lg-9">
								@foreach (PlayerScore player in matchCard.Results.Away.OrderByDescending(p => p.Score)) {
									<span class="@(player.UserId == matchCard.Match.Potm?.Id ? "pom" : "")"><a href="TTLeagues/PlayerSummary/@TTInfoId/@player.Name/@player.UserId">@($"{player.Name}")</a> @($" {player.Score} ")</span>
								}
							</div>
						</div>
						<div class="row justify-content-end">
							<div class="col-12 col-md-8 col-lg-9">
								@foreach (PlayerScore player in matchCard.Results.Home.OrderByDescending(p => p.Score)) {
									<span class="@(player.UserId == matchCard.Match.Potm?.Id ? "pom" : "")"><text><a href="TTLeagues/PlayerSummary/@TTInfoId/@player.Name/@player.UserId">@($"{player.Name}")</a> @($" {player.Score} ")</text></span>
								}
							</div>
						</div>
					}
					<div class="row justify-content-end">
						<div class="col-12 col-sm-8 col-md-8 col-lg-9">
							@CalculateDoublesWinners(matchCard)
						</div>
					</div>
				} else {
					<div class="row justify-content-end">
						<div class="col-12 col-md-8 col-lg-9">
							@{ int opposingTeam = match.Home.TeamId.Equals(TeamId) ? match.Away.TeamId ?? -1 : match.Home.TeamId ?? -1; }
							@if (teamPlayersList.ContainsKey(opposingTeam)) {
								@foreach (TeamStatsPlayer player in teamPlayersList[opposingTeam].OrderByDescending(p => p.Average)) {
									<text><a href="TTLeagues/PlayerSummary/@TTInfoId/@player.Name/@player.Id">@($"{player.Name}")</a> @(player.Played == 0 ? "(n/a) " : $" ({Math.Round(player.Average, 0)}%) ")</text>
								}
							} else {
								<text>Loading ...</text>
							}
						</div>
					</div>
				}
			</details>
		}
	</div>
	<h2>Team Stats</h2>
	<div id="teamstats" class="card">
		<div>
			<div>Captain: <span>@team?.Captain?.Name</span></div>
			<div>Caption: <span>@teamStats?.Competition.Value > @teamStats?.Division.Value</span></div>
		</div>
		<div id="players">
			<h3>Players</h3>
			<table class="table table-bordered table-sm">
				<thead>
					<tr>
						<th>Name</th>
						<th>Played</th>
						<th>Win %</th>
						<th>Ranking</th>
						<th class="">PoM</th>
						<th>Form</th>
					</tr>
				</thead>
				<tbody>
					@foreach (TeamStatsPlayer player in teamStats!.Players.OrderByDescending(p => p.Average).ThenByDescending(p => p.Played)) {
						<tr>
							@{string rankingPosition = rankings.GetValueOrDefault(player.Id)?.Position.ToString() ?? "";}
							<td><a href="TTLeagues/PlayerSummary/@TTInfoId/@player.Name/@player.Id">@player.Name</a></td>
							<td><span>@(new string('0', 2 - player.Played.ToString().Length))</span>@player.Played</td>
							<td><span>@(new string('0', 3 - Math.Round(player.Average, 0).ToString("##0").Length))</span>@($"{Math.Round(player.Average, 0):##0}")%</td>
							<td><span>@(new string('0', 4 - rankingPosition.Length))</span>@rankingPosition</td>
							<td><span>@(new string('0', 2 - (player.Potm).ToString().Length))</span>@(player.Potm)</td>
							<td>@CalculateForm(player.Matches)</td>
						</tr>
					}
					@foreach (TeamMember teamMember in teamMembers) {
						@if (!teamStats!.Players.Any(p => p.Id == teamMember.MemberId)) {
							<tr>
								@{string rankingPosition = rankings.GetValueOrDefault(teamMember.MemberId)?.Position.ToString() ?? "";}
								<td>@teamMember.Name</td>
								<td><span>@(new string('0', 2 - "0".Length))</span>0</td>
								<td><span>@(new string('0', 3 - "n/a".Length))</span>n/a</td>
								<td><span>@(new string('0', 3 - rankingPosition.Length))</span>@rankingPosition</td>
								<td><span>@(new string('0', 2 - "0".Length))</span>0</td>
								<td></td>
							</tr>
						}
					}
				</tbody>
			</table>
		</div>
		<div id="results">
			<h3>Results</h3>
			<table class="table table-bordered table-sm">
				<thead>
					<tr>
						<th>Opposition</th>
						<th>Home Or Away</th>
						<th>Date</th>
						<th>Score</th>
						<th>Pts</th>
						<th>Player Of The Match</th>
					</tr>
				</thead>
				<tbody>
					@if (teamStats!.Results is null or [])
					{
						<tr><td colspan="6">No results</td></tr>
					} else {
						@foreach (TeamStatsResult result in teamStats!.Results) {
							<tr data-result='@CalculateMatchResult(result.For, result.Against)'>
								<td><a href="TTLeagues/TeamSummary/@TTInfoId/@result.Versus.Value">@result.Versus.Value</a></td>
								<td>@(result.Home ? "Home" : "Away")</td>
								<td>@result.Date.ToUKTime().ToString("dd MMM yyyy")</td>
								<td><a href="@CalculateResultHref(teamStats, result)" rel="noopener"><span>@(new string('0', 2 - $"{result.For}".Length))</span>@result.For-@result.Against<span>@(new string('0', 2 - $"{result.Against}".Length))</span></a></td>
								<td><span>@(new string('0', 2 - result.For.ToString().Length))</span>@result.For</td>
								<td>@result.Potm</td>
							</tr>
						}
					}
				</tbody>
			</table>
		</div>
		<div id="division">
			<DivisionSummary TTInfoId="@TTInfoId" CompetitionId="@(fixtures.FirstOrDefault()?.CompetitionId ?? 0)" DivisionId="@(fixtures.FirstOrDefault()?.DivisionId ?? 0)"/>
		</div>

	</div>
}



