@page "/TTLeagues/Match/{TTInfoId}/{MatchId:int}"
@inject TTLeaguesReader _ttleagues
@attribute [StreamRendering]

<PageTitle>@matchCard?.Match.ActualDateTime?.ToUKTime().ToString("yyyy-MM-dd") - @matchCard?.Match.Home.Name v @matchCard?.Match.Away.Name - @TTInfoId</PageTitle>

@if (matchCard is null)
{
	<h1>Loading match #@MatchId ...</h1>
}
else
{
	<h1>@division?.Competition.Name</h1>
	<div class="card match-card">
		<h1>
			<span class="score-row">
				<a href="TTLeagues/TeamSummary/@TTInfoId/@matchCard.Match.Home.Name/@matchCard.Match.Home.TeamId">@matchCard.Match.Home.Name</a>
				<span
					data-win="@(matchCard.Match.Home.Score > matchCard.Match.Away.Score)"
					data-loss="@(matchCard.Match.Home.Score < matchCard.Match.Away.Score)"
					data-draw="@(matchCard.Match.Home.Score == matchCard.Match.Away.Score)"
					class="score">@matchCard.Match.Home.Score</span>
			</span>
			<span class="score-row">
				<a href="TTLeagues/TeamSummary/@TTInfoId/@matchCard.Match.Away.Name/@matchCard.Match.Away.TeamId">@matchCard.Match.Away.Name</a>
				<span
					data-win="@(matchCard.Match.Away.Score > matchCard.Match.Home.Score)"
					data-loss="@(matchCard.Match.Away.Score < matchCard.Match.Home.Score)"
					data-draw="@(matchCard.Match.Away.Score == matchCard.Match.Home.Score)"
					class="score">@matchCard.Match.Away.Score</span>
			</span>
		</h1>
		<div class="match-meta">
			<span>@matchCard.Match.ActualDateTime?.ToUKTime().ToString("ddd dd MMM yyyy")</span>
			<span>@division?.Name</span>
			<span>@matchCard.Match.Venue</span>
		</div>
		<div class="teams">
			<div class="team home">
				<h2>Home</h2>
				<ul>
					@foreach (PlayerScore player in matchCard.Results.Home)
					{
						<li class="@((matchCard.Match.Potm?.Id == player.UserId) ? "pom" : null)"><a href="TTLeagues/PlayerSummary/@TTInfoId/@player.Name/@player.UserId">@player.Name</a> (@player.Score)</li>
					}
				</ul>
			</div>
			<div class="team away">
				<h2>Away</h2>
				<ul>
					@foreach (PlayerScore player in matchCard.Results.Away)
					{
						<li class="@((matchCard.Match.Potm?.Id == player.UserId) ? "pom" : null)"><a href="TTLeagues/PlayerSummary/@TTInfoId/@player.Name/@player.UserId">@player.Name</a> (@player.Score)</li>
					}
				</ul>
			</div>
		</div>
		<table class="table table-bordered match-sets">
			<thead>
				<tr>
					<th></th>
					@for (int i = 1; i <= matchCard.Sets.Max(s => s.Games.Count); i++)
					{
						<th>@i</th>
					}
					<th>H</th>
					<th>A</th>
					@* <th>Res</th> *@
				</tr>
			</thead>
			<tbody>
				@foreach (MatchSet set in matchCard.Sets)
				{
					<tr>
						<td class="players-cell">
							<span
								data-win="@(set.HomeScore > set.AwayScore)"
								data-loss="@(set.HomeScore < set.AwayScore)"
							>@string.Join(" & ", set.HomePlayers.Select(p => p.Name))</span>
							@((MarkupString)(set.HomePlayers.Count > 1 ? "<br />" : " v "))
							<span
								data-win="@(set.AwayScore > set.HomeScore)"
								data-loss="@(set.AwayScore < set.HomeScore)"
							>@string.Join(" & ", set.AwayPlayers.Select(p => p.Name))</span>
						</td>
						@for (int i = 0; i < matchCard.Sets.Max(s => s.Games.Count); i++)
						{
							@if (i < set.Games.Count)
							{
								MatchGame game = set.Games[i];
								<td>@(game.Home.HasValue && game.Away.HasValue ? $"{game.Home}-{game.Away}" : "-")</td>
							}
							else
							{
								<td>-</td>
							}
						}
						<td
							data-win="@(set.HomeScore > set.AwayScore)"
							data-loss="@(set.HomeScore < set.AwayScore)"
							>@set.HomeScore</td>
						<td
							data-win="@(set.AwayScore > set.HomeScore)"
							data-loss="@(set.AwayScore < set.HomeScore)"
							>@set.AwayScore</td>
						@* <td>@HomeAwayOrDraw(set)</td> *@
					</tr>
				}
			</tbody>
		</table>
		@* <div class="signatures">
			<div>(Home) <span class="signature-line"></span> Captain's Signatures <span class="signature-line"></span> (Away)</div>
		</div> *@
	</div>
}


