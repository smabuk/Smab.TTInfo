@page "/TTLeagues/LeagueSummary/{TTInfoId}/{CompetitionId:int?}"
@inject TTLeaguesReader _ttleagues
@attribute [StreamRendering]

<PageTitle>@LeagueName</PageTitle>
<h1>@LeagueName</h1>

@if (League is null) {
	<div>Loading... @LeagueName</div>
} else {
	@foreach (Competition competition in League.CurrentCompetitions.Where(c => CompetitionId is null || c.Id == CompetitionId))
	{
		<div>
			@if (!divisionsList.TryGetValue(competition.Id, out List<Division>? divisions)) {
				<div>Loading @competition.Name ... </div>
			} else {
				<h2>@competition.Name</h2>
				@foreach (Division? division in divisions)
				{
					<DivisionSummary TTInfoId="@TTInfoId" CompetitionId="@(CompetitionId ?? 0)" DivisionId="@division.Id"/>
				}
			}
		</div>
	}
	<br />
	<dl>
		<dt>Name</dt>
		<dd>@League.TenantsHost?.Name</dd>
		<dt>Description</dt>
		<dd>@League.WebsitesHost?.Description</dd>
		<dt>URL</dt>
		<dd><a href="@($"https://{League.TenantsHost?.Host}")" target="_blank">@($"https://{League.TenantsHost?.Host}")</a></dd>
		@* <dt>Theme</dt> *@
		@* <dd>@League.Theme</dd> *@
		<dt>Current Seasons</dt>
		<dd>
			@if (competitionNames.Any()) {
				<select @bind="currentCompetition">
					@foreach (string season in competitionNames) {
						<option value="@season">@season</option>
					}
				</select>
			} else {
				<text>No seasons defined yet</text>
			}
		</dd>
		<dt>Previous Seasons</dt>
		<dd>@string.Join(", ", League.ArchivedCompetitions.OrderByDescending(s => s.Id).Select(s => s.Name))</dd>
	</dl>
}
 

