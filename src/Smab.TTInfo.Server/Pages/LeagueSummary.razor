@page "/LeagueSummary/{LeagueId}"
@inject ITT365Reader _tt365

<PageTitle>@LeagueName - @Program.SiteName</PageTitle>
<h2>@LeagueName</h2>

@if (League is not null && League.CurrentSeason.DivisionCount > 0) 
{
    <h3>Divisions</h3>
    <div>
    @foreach (var division in League.CurrentSeason.Divisions)
    {
        <h4>@division.Name</h4>
        <div class="division">
            <table class="table table-bordered table-sm">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Team</th>
                        <th>P</th>
                        <th>W</th>
                        <th>D</th>
                        <th>L</th>
                        <th>SF</th>
                        <th>SA</th>
                        <th>Avg</th>
                        <th>Pts</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var team in division.Teams)
                    {
                        <tr>
                            <td>@team.LeaguePosition</td>
                            <td><a href="/TeamSummary/@LeagueId/@team.Name">@team.Name</a></td>
                            <td>@team.Played</td>
                            <td>@team.Won</td>
                            <td>@team.Drawn</td>
                            <td>@team.Lost</td>
                            <td>@team.SetsFor</td>
                            <td>@team.SetsAgainst</td>
                            <td>@(team.Points > 0 ? $"{100 * team.Points / (team.SetsAgainst + team.SetsFor):0}%" : "0")</td>
                            <td>@team.Points</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    </div>
    <br />
    <dl>
	    <dt>Name</dt>			    <dd>@League.Name</dd>
	    <dt>Description</dt>	    <dd>@League.Description</dd>
	    <dt>URL</dt>			    <dd>@League.URL</dd>
	    <dt>Theme</dt>			    <dd>@League.Theme</dd>
	    <dt>Current Season</dt>	    <dd>@League.CurrentSeason.Name</dd>
	    <dt>Previous Seasons</dt>	<dd>@string.Join(", ", League.Seasons.OrderByDescending(s => s.Id).Select(s => s.Name))</dd>
    </dl>
}


@code {
    [EditorRequired]
	[Parameter]
	public string LeagueId { get; set; } = "";

	private string LeagueName { get; set; } = "";
	private League? League { get; set; }

	protected override async Task OnParametersSetAsync()
	{
        if(LeagueId is not null)
        {
            LeagueName = LeagueId;
		    League = await _tt365.GetLeague(LeagueId);
		    LeagueName = League?.Name ?? "";
        }
	}
}
