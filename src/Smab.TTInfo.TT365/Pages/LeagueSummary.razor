@page "/LeagueSummary/{LeagueId}"
@inject ITT365Reader _tt365
@attribute [StreamRendering]

<PageTitle>@LeagueName</PageTitle>
<h1>@LeagueName</h1>

@if (League is not null && League.CurrentSeason.DivisionCount > 0) {
	<div>
		@foreach (Division division in League.CurrentSeason.Divisions) {
			<h2>@division.Name</h2>
			<div class="division">
				<table class="table table-bordered table-sm">
					<thead>
						<tr>
							<th>#</th>
							<th>Team</th>
							<th>P</th>
							<th>W</th>
							<th>D</th>
							<th>L</th>
							<th>SF</th>
							<th>SA</th>
							<th>Avg</th>
							<th>Pts</th>
						</tr>
					</thead>
					<tbody>
						@foreach (Team team in division.Teams) {
							<tr>
								<td>@team.LeaguePosition</td>
								<td><a href="/TeamSummary/@LeagueId/@team.Name">@team.Name</a></td>
								<td>@team.Played</td>
								<td>@team.Won</td>
								<td>@team.Drawn</td>
								<td>@team.Lost</td>
								<td>@team.SetsFor</td>
								<td>@team.SetsAgainst</td>
								<td>@(team.Points > 0 ? $"{100 * team.Points / (team.SetsAgainst + team.SetsFor):0}%" : "0")</td>
								<td>@team.Points</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		}
	</div>
	<br />
	<dl>
		<dt>Name</dt>
		<dd>@League.Name</dd>
		<dt>Description</dt>
		<dd>@League.Description</dd>
		<dt>URL</dt>
		<dd><a href="@League.URL" target="_blank">@League.URL</a></dd>
		<dt>Theme</dt>
		<dd>@League.Theme</dd>
		<dt>Current Season</dt>
		<dd>
			@if (seasons.Any()) {
				<select @bind="currentSeason">
					@foreach (string season in seasons) {
						<option value="@season">@season</option>
					}
				</select>
			} else {
				<text>No seasons defined yet</text>
			}

		</dd>
		<dt>Previous Seasons</dt>
		<dd>@string.Join(", ", League.Seasons.OrderByDescending(s => s.Id).Select(s => s.Name))</dd>
	</dl>
}

@code {
	[EditorRequired]
	[Parameter]
	public string LeagueId { get; set; } = "";

	private string LeagueName { get; set; } = "";
	private League? League { get; set; }

	private string currentSeason = "";
	private List<string> seasons = new();

	protected override async Task OnParametersSetAsync()
	{
		if (LeagueId is not null) {
			LeagueName = LeagueId;
			League = await _tt365.GetLeague(LeagueId);
			LeagueName = League?.Name ?? "";
			currentSeason = League?.CurrentSeason.Name ?? "";
			seasons = League?.Seasons.Select(s => s.Name).Append(currentSeason).OrderByDescending(s => s).ToList() ?? [];
		}
	}
}
